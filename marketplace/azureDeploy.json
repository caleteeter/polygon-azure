{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.24.24.22086",
      "templateHash": "12107180008235789586"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region that will be targeted for resources."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Username for the VM"
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use for the VM"
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH key or password for the VM"
      }
    },
    "devVmSize": {
      "type": "string",
      "defaultValue": "Standard_D4s_v4",
      "metadata": {
        "description": "Dev VM size"
      }
    },
    "validatorVmSize": {
      "type": "string",
      "defaultValue": "Standard_D4s_v4",
      "metadata": {
        "description": "Validator VM size"
      }
    },
    "validatorAvailabilityZones": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Validator VM availability zones"
      }
    },
    "rpcEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "RPC enabled"
      }
    },
    "rpcVmSize": {
      "type": "string",
      "defaultValue": "Standard_D4s_v4",
      "metadata": {
        "description": "RPC VM size"
      }
    },
    "rpcAvailabilityZones": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "RPC VM availability zones"
      }
    },
    "indexerEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Indexer enabled"
      }
    },
    "indexerVmSize": {
      "type": "string",
      "defaultValue": "Standard_D4s_v4",
      "metadata": {
        "description": "Indexer VM size"
      }
    },
    "indexerAvailabilityZones": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Indexer VM availability zones"
      }
    },
    "rutcValue": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    }
  },
  "variables": {
    "polygonVersion": "0.8.1",
    "loadBalancerName": "[format('{0}lb', uniqueString(resourceGroup().id))]",
    "roleId": "b24988ac-6180-42a0-ab88-20f7382dd24c"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2022-01-31-preview",
      "name": "[format('{0}mi', uniqueString(resourceGroup().id))]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[format('{0}', guid(uniqueString(resourceGroup().id), parameters('rutcValue')))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleId'))]",
        "description": "akvrole",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}mi', uniqueString(resourceGroup().id))), '2022-01-31-preview').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}mi', uniqueString(resourceGroup().id)))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[format('a{0}akv', uniqueString(resourceGroup().id))]",
      "location": "[parameters('location')]",
      "properties": {
        "tenantId": "[tenant().tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "accessPolicies": [
          {
            "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}mi', uniqueString(resourceGroup().id))), '2022-01-31-preview').principalId]",
            "tenantId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}mi', uniqueString(resourceGroup().id))), '2022-01-31-preview').tenantId]",
            "permissions": {
              "secrets": [
                "all"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}mi', uniqueString(resourceGroup().id)))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}dpy', uniqueString(resourceGroup().id))]",
      "location": "[parameters('location')]",
      "kind": "AzureCLI",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}mi', uniqueString(resourceGroup().id))))]": {}
        }
      },
      "properties": {
        "arguments": "[format('{0} {1} {2} {3} {4}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}mi', uniqueString(resourceGroup().id))), format('a{0}akv', uniqueString(resourceGroup().id)), if(parameters('rpcEnabled'), 2, 0), if(parameters('indexerEnabled'), 2, 0), variables('polygonVersion'))]",
        "forceUpdateTag": "1",
        "containerSettings": {
          "containerGroupName": "[format('{0}ci1', uniqueString(resourceGroup().id))]"
        },
        "primaryScriptUri": "https://raw.githubusercontent.com/caleteeter/polygon-azure/main/scripts/deploy.sh",
        "timeout": "PT30M",
        "cleanupPreference": "OnSuccess",
        "azCliVersion": "2.28.0",
        "retentionInterval": "P1D"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', format('a{0}akv', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}mi', uniqueString(resourceGroup().id)))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}vnet', uniqueString(resourceGroup().id))]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.1.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "main",
            "properties": {
              "addressPrefix": "10.1.1.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}nsg', uniqueString(resourceGroup().id))]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "rpc",
            "properties": {
              "access": "Allow",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationPortRange": "8545",
              "destinationAddressPrefix": "*",
              "direction": "Inbound",
              "priority": 101
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}pipidx', uniqueString(resourceGroup().id))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}piprpc', uniqueString(resourceGroup().id))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4"
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2022-07-01",
      "name": "[variables('loadBalancerName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "lbrpcfe",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}piprpc', uniqueString(resourceGroup().id)))]"
              }
            }
          },
          {
            "name": "lbidxfe",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}pipidx', uniqueString(resourceGroup().id)))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "lbrpcbe"
          },
          {
            "name": "lbidxbe"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "lbrpcrule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancerName'), 'lbrpcfe')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), 'lbrpcbe')]"
              },
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancerName'), 'lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 8545,
              "backendPort": 8545,
              "idleTimeoutInMinutes": 15
            }
          },
          {
            "name": "lbidxrule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancerName'), 'lbidxfe')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), 'lbidxbe')]"
              },
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancerName'), 'lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 8545,
              "backendPort": 8545,
              "idleTimeoutInMinutes": 15
            }
          }
        ],
        "probes": [
          {
            "name": "lbprobe",
            "properties": {
              "protocol": "Tcp",
              "port": 8545,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}pipidx', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}piprpc', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', uniqueString(resourceGroup().id)))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "devDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vmSize": {
            "value": "[parameters('devVmSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPasswordOrKey": {
            "value": "[parameters('adminPasswordOrKey')]"
          },
          "authenticationType": {
            "value": "[parameters('authenticationType')]"
          },
          "akvName": {
            "value": "[format('a{0}akv', uniqueString(resourceGroup().id))]"
          },
          "managedIdentity": {
            "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}mi', uniqueString(resourceGroup().id)))]"
          },
          "nsg": {
            "value": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}nsg', uniqueString(resourceGroup().id)))]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', uniqueString(resourceGroup().id))), '2022-07-01').subnets[0].id]"
          },
          "totalNodes": {
            "value": 4
          },
          "polygonVersion": {
            "value": "[variables('polygonVersion')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "6003695825463621782"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region that will be targeted for resources."
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "Subnet id"
              }
            },
            "nsg": {
              "type": "string",
              "metadata": {
                "description": "Network security group id"
              }
            },
            "managedIdentity": {
              "type": "string",
              "metadata": {
                "description": "The identity used by the VM"
              }
            },
            "vmSize": {
              "type": "string",
              "metadata": {
                "description": "The size of the virtual machine"
              }
            },
            "adminUsername": {
              "type": "string",
              "metadata": {
                "description": "Username for the VM"
              }
            },
            "authenticationType": {
              "type": "string",
              "allowedValues": [
                "sshPublicKey",
                "password"
              ],
              "metadata": {
                "description": "Type of authentication to use for the VM"
              }
            },
            "adminPasswordOrKey": {
              "type": "securestring",
              "metadata": {
                "description": "SSH key or password for the VM"
              }
            },
            "akvName": {
              "type": "string",
              "metadata": {
                "description": "AKV name"
              }
            },
            "totalNodes": {
              "type": "int",
              "metadata": {
                "description": "Total nodes"
              }
            },
            "polygonVersion": {
              "type": "string",
              "metadata": {
                "description": "Polygon version number"
              }
            }
          },
          "variables": {
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                    "keyData": "[parameters('adminPasswordOrKey')]"
                  }
                ]
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}nic50', uniqueString(resourceGroup().id))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAddress": "10.1.1.50",
                      "privateIPAllocationMethod": "Static",
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "IPv4"
                    }
                  }
                ],
                "enableAcceleratedNetworking": true,
                "networkSecurityGroup": {
                  "id": "[parameters('nsg')]"
                }
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}vm50', uniqueString(resourceGroup().id))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentity'))]": {}
                }
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "0001-com-ubuntu-server-focal",
                    "sku": "20_04-lts-gen2",
                    "version": "latest"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "Premium_LRS"
                    }
                  }
                },
                "osProfile": {
                  "computerName": "[format('{0}vm', uniqueString(resourceGroup().id))]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPasswordOrKey')]",
                  "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}nic50', uniqueString(resourceGroup().id)))]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}nic50', uniqueString(resourceGroup().id)))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', format('{0}vm50', uniqueString(resourceGroup().id)), format('{0}vmext50', uniqueString(resourceGroup().id)))]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "https://raw.githubusercontent.com/caleteeter/polygon-azure/main/scripts/devDeploy.sh"
                  ],
                  "commandToExecute": "[format('/bin/bash devDeploy.sh {0} {1} {2} {3}', parameters('managedIdentity'), parameters('akvName'), parameters('totalNodes'), parameters('polygonVersion'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', format('{0}vm50', uniqueString(resourceGroup().id)))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', format('a{0}akv', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Resources/deploymentScripts', format('{0}dpy', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}mi', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}nsg', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', uniqueString(resourceGroup().id)))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "validatorDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vmSize": {
            "value": "[parameters('validatorVmSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPasswordOrKey": {
            "value": "[parameters('adminPasswordOrKey')]"
          },
          "authenticationType": {
            "value": "[parameters('authenticationType')]"
          },
          "akvName": {
            "value": "[format('a{0}akv', uniqueString(resourceGroup().id))]"
          },
          "managedIdentity": {
            "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}mi', uniqueString(resourceGroup().id)))]"
          },
          "nsg": {
            "value": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}nsg', uniqueString(resourceGroup().id)))]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', uniqueString(resourceGroup().id))), '2022-07-01').subnets[0].id]"
          },
          "totalNodes": {
            "value": 4
          },
          "availabilityZones": {
            "value": "[parameters('validatorAvailabilityZones')]"
          },
          "polygonVersion": {
            "value": "[variables('polygonVersion')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "13614080797663368240"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region that will be targeted for resources."
              }
            },
            "akvName": {
              "type": "string",
              "metadata": {
                "description": "AKV name"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "Subnet id"
              }
            },
            "nsg": {
              "type": "string",
              "metadata": {
                "description": "Network security group id"
              }
            },
            "managedIdentity": {
              "type": "string",
              "metadata": {
                "description": "The identity used by the VM"
              }
            },
            "vmSize": {
              "type": "string",
              "metadata": {
                "description": "The size of the virtual machine"
              }
            },
            "adminUsername": {
              "type": "string",
              "metadata": {
                "description": "Username for the VM"
              }
            },
            "authenticationType": {
              "type": "string",
              "allowedValues": [
                "sshPublicKey",
                "password"
              ],
              "metadata": {
                "description": "Type of authentication to use for the VM"
              }
            },
            "adminPasswordOrKey": {
              "type": "securestring",
              "metadata": {
                "description": "SSH key or password for the VM"
              }
            },
            "availabilityZones": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Validator VM availability zones"
              }
            },
            "totalNodes": {
              "type": "int",
              "metadata": {
                "description": "Total nodes"
              }
            },
            "polygonVersion": {
              "type": "string",
              "metadata": {
                "description": "Polygon version number"
              }
            }
          },
          "variables": {
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                    "keyData": "[parameters('adminPasswordOrKey')]"
                  }
                ]
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "nic",
                "count": "[length(range(0, parameters('totalNodes')))]"
              },
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}nic{1}', uniqueString(resourceGroup().id), range(0, parameters('totalNodes'))[copyIndex()])]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAddress": "[format('10.1.1.{0}', add(int(range(0, parameters('totalNodes'))[copyIndex()]), 11))]",
                      "privateIPAllocationMethod": "Static",
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "IPv4"
                    }
                  }
                ],
                "enableAcceleratedNetworking": true,
                "networkSecurityGroup": {
                  "id": "[parameters('nsg')]"
                }
              }
            },
            {
              "copy": {
                "name": "vm",
                "count": "[length(range(0, parameters('totalNodes')))]"
              },
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}vm{1}', uniqueString(resourceGroup().id), range(0, parameters('totalNodes'))[copyIndex()])]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentity'))]": {}
                }
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "0001-com-ubuntu-server-focal",
                    "sku": "20_04-lts-gen2",
                    "version": "latest"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "Premium_LRS"
                    }
                  }
                },
                "osProfile": {
                  "computerName": "[format('{0}vm', uniqueString(resourceGroup().id))]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPasswordOrKey')]",
                  "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}nic{1}', uniqueString(resourceGroup().id), range(0, parameters('totalNodes'))[range(0, parameters('totalNodes'))[copyIndex()]]))]"
                    }
                  ]
                }
              },
              "zones": "[if(equals(parameters('availabilityZones'), ''), createArray(), createArray(string(parameters('availabilityZones'))))]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}nic{1}', uniqueString(resourceGroup().id), range(0, parameters('totalNodes'))[range(0, parameters('totalNodes'))[copyIndex()]]))]",
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}nic{1}', uniqueString(resourceGroup().id), range(0, parameters('totalNodes'))[range(0, parameters('totalNodes'))[copyIndex()]]))]"
              ]
            },
            {
              "copy": {
                "name": "vmExtension",
                "count": "[length(range(0, parameters('totalNodes')))]"
              },
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', format('{0}vm{1}', uniqueString(resourceGroup().id), range(0, parameters('totalNodes'))[range(0, parameters('totalNodes'))[copyIndex()]]), format('{0}vmext{1}', uniqueString(resourceGroup().id), range(0, parameters('totalNodes'))[copyIndex()]))]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "https://raw.githubusercontent.com/caleteeter/polygon-azure/main/scripts/clientDeploy.sh"
                  ],
                  "commandToExecute": "[format('/bin/bash clientDeploy.sh {0} {1} {2} {3}', parameters('managedIdentity'), parameters('akvName'), range(0, parameters('totalNodes'))[copyIndex()], parameters('polygonVersion'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', format('{0}vm{1}', uniqueString(resourceGroup().id), range(0, parameters('totalNodes'))[range(0, parameters('totalNodes'))[copyIndex()]]))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', format('a{0}akv', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Resources/deploymentScripts', format('{0}dpy', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Resources/deployments', 'devDeploy')]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}mi', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}nsg', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', uniqueString(resourceGroup().id)))]"
      ]
    },
    {
      "condition": "[parameters('rpcEnabled')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "rpcDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vmSize": {
            "value": "[parameters('rpcVmSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPasswordOrKey": {
            "value": "[parameters('adminPasswordOrKey')]"
          },
          "authenticationType": {
            "value": "[parameters('authenticationType')]"
          },
          "akvName": {
            "value": "[format('a{0}akv', uniqueString(resourceGroup().id))]"
          },
          "managedIdentity": {
            "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}mi', uniqueString(resourceGroup().id)))]"
          },
          "nsg": {
            "value": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}nsg', uniqueString(resourceGroup().id)))]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', uniqueString(resourceGroup().id))), '2022-07-01').subnets[0].id]"
          },
          "totalNodes": {
            "value": 2
          },
          "availabilityZones": {
            "value": "[parameters('rpcAvailabilityZones')]"
          },
          "loadBalancerName": {
            "value": "[variables('loadBalancerName')]"
          },
          "loadBalancerBackendName": {
            "value": "lbrpcbe"
          },
          "polygonVersion": {
            "value": "[variables('polygonVersion')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "1303036913669251456"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region that will be targeted for resources."
              }
            },
            "akvName": {
              "type": "string",
              "metadata": {
                "description": "AKV name"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "Subnet id"
              }
            },
            "loadBalancerName": {
              "type": "string",
              "metadata": {
                "description": "Load balancer name"
              }
            },
            "loadBalancerBackendName": {
              "type": "string",
              "metadata": {
                "description": "Load balancer backend name"
              }
            },
            "nsg": {
              "type": "string",
              "metadata": {
                "description": "Network security group id"
              }
            },
            "managedIdentity": {
              "type": "string",
              "metadata": {
                "description": "The identity used by the VM"
              }
            },
            "vmSize": {
              "type": "string",
              "metadata": {
                "description": "The size of the virtual machine"
              }
            },
            "adminUsername": {
              "type": "string",
              "metadata": {
                "description": "Username for the VM"
              }
            },
            "authenticationType": {
              "type": "string",
              "allowedValues": [
                "sshPublicKey",
                "password"
              ],
              "metadata": {
                "description": "Type of authentication to use for the VM"
              }
            },
            "adminPasswordOrKey": {
              "type": "securestring",
              "metadata": {
                "description": "SSH key or password for the VM"
              }
            },
            "availabilityZones": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Validator VM availability zones"
              }
            },
            "totalNodes": {
              "type": "int",
              "metadata": {
                "description": "Total nodes"
              }
            },
            "polygonVersion": {
              "type": "string",
              "metadata": {
                "description": "Polygon version number"
              }
            }
          },
          "variables": {
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                    "keyData": "[parameters('adminPasswordOrKey')]"
                  }
                ]
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "nic",
                "count": "[length(range(0, parameters('totalNodes')))]"
              },
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}nic{1}', uniqueString(resourceGroup().id), add(int(range(0, parameters('totalNodes'))[copyIndex()]), 4))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAddress": "[format('10.1.1.{0}', add(int(range(0, parameters('totalNodes'))[copyIndex()]), 15))]",
                      "privateIPAllocationMethod": "Static",
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "IPv4",
                      "loadBalancerBackendAddressPools": [
                        {
                          "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), parameters('loadBalancerBackendName'))]"
                        }
                      ]
                    }
                  }
                ],
                "enableAcceleratedNetworking": true,
                "networkSecurityGroup": {
                  "id": "[parameters('nsg')]"
                }
              }
            },
            {
              "copy": {
                "name": "vm",
                "count": "[length(range(0, parameters('totalNodes')))]"
              },
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}vm{1}', uniqueString(resourceGroup().id), add(int(range(0, parameters('totalNodes'))[copyIndex()]), 4))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentity'))]": {}
                }
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "0001-com-ubuntu-server-focal",
                    "sku": "20_04-lts-gen2",
                    "version": "latest"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "Premium_LRS"
                    }
                  }
                },
                "osProfile": {
                  "computerName": "[format('{0}vm', uniqueString(resourceGroup().id))]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPasswordOrKey')]",
                  "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}nic{1}', uniqueString(resourceGroup().id), add(int(range(0, parameters('totalNodes'))[range(0, parameters('totalNodes'))[copyIndex()]]), 4)))]"
                    }
                  ]
                }
              },
              "zones": "[if(equals(parameters('availabilityZones'), ''), createArray(), createArray(string(parameters('availabilityZones'))))]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}nic{1}', uniqueString(resourceGroup().id), add(int(range(0, parameters('totalNodes'))[range(0, parameters('totalNodes'))[copyIndex()]]), 4)))]",
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}nic{1}', uniqueString(resourceGroup().id), add(int(range(0, parameters('totalNodes'))[range(0, parameters('totalNodes'))[copyIndex()]]), 4)))]"
              ]
            },
            {
              "copy": {
                "name": "vmExtension",
                "count": "[length(range(0, parameters('totalNodes')))]"
              },
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', format('{0}vm{1}', uniqueString(resourceGroup().id), add(int(range(0, parameters('totalNodes'))[range(0, parameters('totalNodes'))[copyIndex()]]), 4)), format('{0}vmext{1}', uniqueString(resourceGroup().id), add(int(range(0, parameters('totalNodes'))[copyIndex()]), 4)))]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "https://raw.githubusercontent.com/caleteeter/polygon-azure/main/scripts/clientDeploy.sh"
                  ],
                  "commandToExecute": "[format('/bin/bash clientDeploy.sh {0} {1} {2} {3}', parameters('managedIdentity'), parameters('akvName'), add(int(range(0, parameters('totalNodes'))[copyIndex()]), 4), parameters('polygonVersion'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', format('{0}vm{1}', uniqueString(resourceGroup().id), add(int(range(0, parameters('totalNodes'))[range(0, parameters('totalNodes'))[copyIndex()]]), 4)))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', format('a{0}akv', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Resources/deploymentScripts', format('{0}dpy', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}mi', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}nsg', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', uniqueString(resourceGroup().id)))]"
      ]
    },
    {
      "condition": "[parameters('indexerEnabled')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "idxDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vmSize": {
            "value": "[parameters('indexerVmSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPasswordOrKey": {
            "value": "[parameters('adminPasswordOrKey')]"
          },
          "authenticationType": {
            "value": "[parameters('authenticationType')]"
          },
          "akvName": {
            "value": "[format('a{0}akv', uniqueString(resourceGroup().id))]"
          },
          "managedIdentity": {
            "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}mi', uniqueString(resourceGroup().id)))]"
          },
          "nsg": {
            "value": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}nsg', uniqueString(resourceGroup().id)))]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', uniqueString(resourceGroup().id))), '2022-07-01').subnets[0].id]"
          },
          "totalNodes": {
            "value": 2
          },
          "availabilityZones": {
            "value": "[parameters('indexerAvailabilityZones')]"
          },
          "loadBalancerName": {
            "value": "[variables('loadBalancerName')]"
          },
          "loadBalancerBackendName": {
            "value": "lbidxbe"
          },
          "polygonVersion": {
            "value": "[variables('polygonVersion')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.24.24.22086",
              "templateHash": "2328159434695212809"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region that will be targeted for resources."
              }
            },
            "akvName": {
              "type": "string",
              "metadata": {
                "description": "AKV name"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "Subnet id"
              }
            },
            "loadBalancerName": {
              "type": "string",
              "metadata": {
                "description": "Load balancer name"
              }
            },
            "loadBalancerBackendName": {
              "type": "string",
              "metadata": {
                "description": "Load balancer backend name"
              }
            },
            "nsg": {
              "type": "string",
              "metadata": {
                "description": "Network security group id"
              }
            },
            "managedIdentity": {
              "type": "string",
              "metadata": {
                "description": "The identity used by the VM"
              }
            },
            "vmSize": {
              "type": "string",
              "metadata": {
                "description": "The size of the virtual machine"
              }
            },
            "adminUsername": {
              "type": "string",
              "metadata": {
                "description": "Username for the VM"
              }
            },
            "authenticationType": {
              "type": "string",
              "allowedValues": [
                "sshPublicKey",
                "password"
              ],
              "metadata": {
                "description": "Type of authentication to use for the VM"
              }
            },
            "adminPasswordOrKey": {
              "type": "securestring",
              "metadata": {
                "description": "SSH key or password for the VM"
              }
            },
            "availabilityZones": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Validator VM availability zones"
              }
            },
            "totalNodes": {
              "type": "int",
              "metadata": {
                "description": "Total nodes"
              }
            },
            "polygonVersion": {
              "type": "string",
              "metadata": {
                "description": "Polygon version number"
              }
            }
          },
          "variables": {
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                    "keyData": "[parameters('adminPasswordOrKey')]"
                  }
                ]
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "nic",
                "count": "[length(range(0, parameters('totalNodes')))]"
              },
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}nic{1}', uniqueString(resourceGroup().id), add(int(range(0, parameters('totalNodes'))[copyIndex()]), 6))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAddress": "[format('10.1.1.{0}', add(int(range(0, parameters('totalNodes'))[copyIndex()]), 17))]",
                      "privateIPAllocationMethod": "Static",
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "IPv4",
                      "loadBalancerBackendAddressPools": [
                        {
                          "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), parameters('loadBalancerBackendName'))]"
                        }
                      ]
                    }
                  }
                ],
                "enableAcceleratedNetworking": true,
                "networkSecurityGroup": {
                  "id": "[parameters('nsg')]"
                }
              }
            },
            {
              "copy": {
                "name": "vm",
                "count": "[length(range(0, parameters('totalNodes')))]"
              },
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}vm{1}', uniqueString(resourceGroup().id), add(int(range(0, parameters('totalNodes'))[copyIndex()]), 6))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentity'))]": {}
                }
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "0001-com-ubuntu-server-focal",
                    "sku": "20_04-lts-gen2",
                    "version": "latest"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "Premium_LRS"
                    }
                  }
                },
                "osProfile": {
                  "computerName": "[format('{0}vm', uniqueString(resourceGroup().id))]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPasswordOrKey')]",
                  "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}nic{1}', uniqueString(resourceGroup().id), add(int(range(0, parameters('totalNodes'))[range(0, parameters('totalNodes'))[copyIndex()]]), 6)))]"
                    }
                  ]
                }
              },
              "zones": "[if(equals(parameters('availabilityZones'), ''), createArray(), createArray(string(parameters('availabilityZones'))))]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}nic{1}', uniqueString(resourceGroup().id), add(int(range(0, parameters('totalNodes'))[range(0, parameters('totalNodes'))[copyIndex()]]), 6)))]",
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}nic{1}', uniqueString(resourceGroup().id), add(int(range(0, parameters('totalNodes'))[range(0, parameters('totalNodes'))[copyIndex()]]), 6)))]"
              ]
            },
            {
              "copy": {
                "name": "vmExtension",
                "count": "[length(range(0, parameters('totalNodes')))]"
              },
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', format('{0}vm{1}', uniqueString(resourceGroup().id), add(int(range(0, parameters('totalNodes'))[range(0, parameters('totalNodes'))[copyIndex()]]), 6)), format('{0}vmext{1}', uniqueString(resourceGroup().id), add(int(range(0, parameters('totalNodes'))[copyIndex()]), 6)))]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "https://raw.githubusercontent.com/caleteeter/polygon-azure/main/scripts/clientDeploy.sh"
                  ],
                  "commandToExecute": "[format('/bin/bash clientDeploy.sh {0} {1} {2} {3}', parameters('managedIdentity'), parameters('akvName'), add(int(range(0, parameters('totalNodes'))[copyIndex()]), 6), parameters('polygonVersion'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', format('{0}vm{1}', uniqueString(resourceGroup().id), add(int(range(0, parameters('totalNodes'))[range(0, parameters('totalNodes'))[copyIndex()]]), 6)))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', format('a{0}akv', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Resources/deploymentScripts', format('{0}dpy', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}mi', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}nsg', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', uniqueString(resourceGroup().id)))]"
      ]
    }
  ]
}